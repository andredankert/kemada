events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging Settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    server {
        listen 80;
        server_name localhost;

        root /usr/share/nginx/html;
        index index.html index.php;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
        add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()";

        # API requests to PHP files
        location ~ ^/api/(.+)\.php$ {
            # Pass PHP scripts to FastCGI server
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
            
            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }

        # Legacy API requests - redirect to PHP files
        location /api/contact {
            rewrite ^/api/contact$ /api/contact.php last;
        }

        location /api/testimonial {
            rewrite ^/api/testimonial$ /api/testimonial.php last;
        }

        # Handle client-side routing
        location / {
            try_files $uri $uri/ /index.html =404;
            add_header Cache-Control "no-cache";
        }

        # Cache static assets
        location ~* \.(jpg|jpeg|png|webp|gif|ico|css|js)$ {
            expires 1y;
            add_header Cache-Control "public, no-transform";
            try_files $uri =404;
        }
    }
} 